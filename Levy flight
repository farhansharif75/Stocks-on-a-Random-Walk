from scipy.stats import levy
from scipy.stats import uniform


def levy_flight(n):

    # uniformly distributed angles
    angle = uniform.rvs(size=(n,), loc=.0, scale=2.*np.pi)

    # levy distributed step length
    r = levy.rvs(size=n)

    # x and y coordinates (position added to previous coordinate --> cum. sum)
    x = np.cumsum(r*np.cos(angle))
    y = np.cumsum(r*np.sin(angle))

    return np.array( (x, y, r, angle) )

# number of steps to simulate
n = 1258

# get levy walk (strictly speaking, it seems to be a flight)
foo_levy = levy_flight(n)

# initialize figure
fig = plt.figure(figsize=(14,6))

# plot 2D random walk with Levy stepsize
ax1 = fig.add_subplot(1,2,1)
ax1.plot(foo_levy[0,:], foo_levy[1,:])
ax1.set_xlabel('x')
ax1.grid()
ax1.set_ylabel('y')
ax1.set_title('2D Levy flight')


plt.show()
